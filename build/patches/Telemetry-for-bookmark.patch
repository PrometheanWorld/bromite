From 25d365824c6e509a94c4117240b071d3d828bcf9 Mon Sep 17 00:00:00 2001
From: wuyifeng <wuyifeng@nd.com.cn>
Date: Fri, 16 Dec 2022 11:42:24 +0800
Subject: Telemetry event for adding to bookmark

Fix version: 1.2.1
Create TelemetryUtils class for managing Telemetry event.
Add the 'Website Saved To Bookmarks' telemetry event.
Relate to AP9-11097.

---
 base/BUILD.gn                                 |  2 +
 .../src/org/chromium/base/TelemetryUtils.java | 71 +++++++++++++++++++
 .../base/SplitMonochromeApplication.java      | 24 +------
 .../browser/bookmarks/BookmarkBridge.java     |  2 +
 .../fullscreen/FullscreenHtmlApiHandler.java  | 10 +--
 .../offlinepages/OfflinePageUtils.java        |  2 +
 6 files changed, 81 insertions(+), 30 deletions(-)
 create mode 100755 base/android/java/src/org/chromium/base/TelemetryUtils.java

diff --git a/base/BUILD.gn b/base/BUILD.gn
--- a/base/BUILD.gn
+++ b/base/BUILD.gn
@@ -4084,6 +4084,7 @@ if (is_android) {
     ]

     deps = [
+      "//third_party/android_deps:com_prometheanworld_telemetry_java",
       "//third_party/android_deps:com_prometheanworld_identity_api_java",
       "//third_party/android_deps:com_google_code_findbugs_jsr305_java",
       "//third_party/androidx:androidx_annotation_annotation_experimental_java",
@@ -4151,6 +4152,7 @@ if (is_android) {
       "android/java/src/org/chromium/base/StreamUtil.java",
       "android/java/src/org/chromium/base/StrictModeContext.java",
       "android/java/src/org/chromium/base/SysUtils.java",
+      "android/java/src/org/chromium/base/TelemetryUtils.java",
       "android/java/src/org/chromium/base/ThreadUtils.java",
       "android/java/src/org/chromium/base/TimeUtils.java",
       "android/java/src/org/chromium/base/TimezoneUtils.java",
diff --git a/base/android/java/src/org/chromium/base/TelemetryUtils.java b/base/android/java/src/org/chromium/base/TelemetryUtils.java
new file mode 100755
--- /dev/null
+++ b/base/android/java/src/org/chromium/base/TelemetryUtils.java
@@ -0,0 +1,71 @@
+package org.chromium.base;
+
+import android.app.ActivityManager;
+import android.content.Context;
+import android.os.Process;
+
+import com.prometheanworld.telemetry.Telemetry;
+import com.prometheanworld.telemetry.TelemetryInitializer;
+
+import org.chromium.base.ContextUtils;
+import org.json.JSONObject;
+
+public class TelemetryUtils {
+
+	private static final String EVENT_VIDEO_FULL_SCREEN = "Chromium Video Player Full Screen Mode";
+	private static final String EVENT_WEBSITE_SAVED_TO_BOOKMARKS = "Website Saved To Bookmarks";
+
+	private static final String KEY_VIDEO_FULL_SCREEN = "Video Player in Chromium Full Screen Mode";
+	private static final String KEY_WEBSITE_BOOKMARKED = "Website Bookmarked";
+
+	private static final String VALUE_VIDEO_FULL_SCREEN = "Full screen mode selected in browser video player";
+
+
+	private TelemetryUtils() {
+		throw new UnsupportedOperationException("u can't instantiate me...");
+	}
+
+	public static void init() {
+		if (isMainProcess()) {
+			new TelemetryInitializer().create(ContextUtils.getApplicationContext());
+		}
+	}
+
+	public static void sendVideoFullScreenEvent() {
+		try {
+			JSONObject eventData = new JSONObject();
+			eventData.put(KEY_VIDEO_FULL_SCREEN, VALUE_VIDEO_FULL_SCREEN);
+			sendEvent(EVENT_VIDEO_FULL_SCREEN, eventData);
+		} catch (Throwable ignored) {
+		}
+	}
+
+	public static void sendWebsiteSavedToBookmarksEvent(String url) {
+		try {
+			JSONObject eventData = new JSONObject();
+			eventData.put(KEY_WEBSITE_BOOKMARKED, url);
+			sendEvent(EVENT_WEBSITE_SAVED_TO_BOOKMARKS, eventData);
+		} catch (Throwable ignored) {
+		}
+	}
+
+	private static void sendEvent(String eventName, JSONObject eventData) {
+        Telemetry.send(eventName, eventData);
+	}
+
+    private static boolean isMainProcess() {
+        Context context = ContextUtils.getApplicationContext();
+        boolean isMain = false;
+        try {
+            ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
+            for (ActivityManager.RunningAppProcessInfo process : am.getRunningAppProcesses()) {
+                if (process.pid == Process.myPid() && process.processName.equals(context.getPackageName())) {
+                    isMain = true;
+                    break;
+               }
+            }
+       } catch (Throwable ignored) {
+       }
+       return isMain;
+    }
+}
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java b/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java
@@ -4,14 +4,11 @@

 package org.chromium.chrome.browser.base;

-import android.app.ActivityManager;
 import android.content.Context;
-import android.os.Process;
-
-import com.prometheanworld.telemetry.TelemetryInitializer;

 import org.chromium.android_webview.nonembedded.WebViewApkApplication;
 import org.chromium.base.PrometheanManager;
+import org.chromium.base.TelemetryUtils;
 import org.chromium.base.annotations.IdentifierNameString;
 import org.chromium.base.library_loader.LibraryProcessType;
 import org.chromium.components.version_info.VersionInfo;
@@ -50,9 +47,7 @@ public class SplitMonochromeApplication extends SplitChromeApplication {
     @Override
     public void onCreate() {
        super.onCreate();
-       if (isMainProcess(this)) {
-           new TelemetryInitializer().create(this);
-       }
+       TelemetryUtils.init();
        PrometheanManager.INSTANCE.updateLoginStatus();
     }

@@ -79,19 +74,4 @@ public class SplitMonochromeApplication extends SplitChromeApplication {
     public boolean isWebViewProcess() {
         return WebViewApkApplication.isWebViewProcess();
     }
-
-    public static boolean isMainProcess(Context context) {
-       boolean isMain = false;
-       try {
-            ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
-           for (ActivityManager.RunningAppProcessInfo process : am.getRunningAppProcesses()) {
-                if (process.pid == Process.myPid() && process.processName.equals(context.getPackageName())) {
-                   isMain = true;
-                   break;
-               }
-            }
-       } catch (Throwable e) {
-       }
-       return isMain;
-    }
 }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkBridge.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkBridge.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkBridge.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkBridge.java
@@ -31,6 +31,7 @@ import com.google.protobuf.InvalidProtocolBufferException;
 import org.chromium.base.ContextUtils;
 import org.chromium.base.Log;
 import org.chromium.base.ObserverList;
+import org.chromium.base.TelemetryUtils;
 import org.chromium.base.ThreadUtils;
 import org.chromium.base.annotations.CalledByNative;
 import org.chromium.base.annotations.NativeMethods;
@@ -1393,6 +1394,7 @@ public class BookmarkBridge {
             Log.e(TAG,
                     "Failed to add bookmarks: parentTypeAndId %s", parent);
         }
+        TelemetryUtils.sendWebsiteSavedToBookmarksEvent(tab.getUrl().getSpec());
         return bookmarkId;
      }

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/fullscreen/FullscreenHtmlApiHandler.java b/chrome/android/java/src/org/chromium/chrome/browser/fullscreen/FullscreenHtmlApiHandler.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/fullscreen/FullscreenHtmlApiHandler.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/fullscreen/FullscreenHtmlApiHandler.java
@@ -22,13 +22,12 @@ import android.view.WindowManager;
 import androidx.annotation.Nullable;
 import androidx.core.util.ObjectsCompat;

-import com.prometheanworld.telemetry.Telemetry;
-
 import org.chromium.base.ActivityState;
 import org.chromium.base.ApplicationStatus;
 import org.chromium.base.ApplicationStatus.ActivityStateListener;
 import org.chromium.base.ApplicationStatus.WindowFocusChangedListener;
 import org.chromium.base.ObserverList;
+import org.chromium.base.TelemetryUtils;
 import org.chromium.base.supplier.ObservableSupplier;
 import org.chromium.base.supplier.ObservableSupplierImpl;
 import org.chromium.cc.input.BrowserControlsState;
@@ -50,7 +49,6 @@ import org.chromium.content_public.browser.GestureListenerManager;
 import org.chromium.content_public.browser.NavigationHandle;
 import org.chromium.content_public.browser.SelectionPopupController;
 import org.chromium.content_public.browser.WebContents;
-import org.json.JSONObject;

 import java.lang.ref.WeakReference;

@@ -512,11 +510,7 @@ public class FullscreenHtmlApiHandler implements ActivityStateListener, WindowFo
         mContentViewInFullscreen = contentView;
         mTabInFullscreen = tab;

-        try {
-            JSONObject eventData = new JSONObject();
-            eventData.put("Video Player in Chromium Full Screen Mode", "Full screen mode selected in browser video player");
-            Telemetry.send("Chromium Video Player Full Screen Mode", eventData);
-        } catch (Throwable e) { }
+        TelemetryUtils.sendVideoFullScreenEvent();
     }

     /**
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageUtils.java b/chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageUtils.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageUtils.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/offlinepages/OfflinePageUtils.java
@@ -19,6 +19,7 @@ import org.chromium.base.ApplicationStatus;
 import org.chromium.base.Callback;
 import org.chromium.base.ContentUriUtils;
 import org.chromium.base.Log;
+import org.chromium.base.TelemetryUtils;
 import org.chromium.base.metrics.RecordHistogram;
 import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.base.task.AsyncTask;
@@ -276,6 +277,7 @@ public class OfflinePageUtils {
             @Override
             public void onSavePageDone(int savePageResult, String url, long offlineId) {
                 // Result of the call is ignored.
+                TelemetryUtils.sendWebsiteSavedToBookmarksEvent(url);
             }
         });
     }
--
2.34.1
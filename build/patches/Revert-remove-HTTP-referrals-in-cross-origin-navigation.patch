From: wuyifeng <wuyifeng@nd.com.cn>
Date: Tue, 27 Dec 2022 10:43:41 +0800
Subject: Revert Remove-HTTP-referrals-in-cross-origin-navigation.patch

This patch is to fix the issue that cannot access
https://www.skolestudio.no/Multi--Matematikk--2/1e551a69-412d-4565-846f-30f0e273b640--2%20Addition%20og%20subtraction%20til%2040/view--podium--9fdce888-83c0-4e97-8e9e-ae9406c4cd44/b115ce1b-55d4-44fd-8c0c-60f6800b91a6

---
 chrome/android/java/res/xml/privacy_preferences.xml       | 4 ----
 .../chrome/browser/privacy/settings/PrivacySettings.java  | 8 --------
 content/browser/renderer_host/navigation_request.cc       | 7 -------
 services/network/public/cpp/resource_request.h            | 2 +-
 4 files changed, 1 insertion(+), 20 deletions(-)

diff --git a/chrome/android/java/res/xml/privacy_preferences.xml b/chrome/android/java/res/xml/privacy_preferences.xml
--- a/chrome/android/java/res/xml/privacy_preferences.xml
+++ b/chrome/android/java/res/xml/privacy_preferences.xml
@@ -60,10 +60,6 @@ found in the LICENSE file.
         android:title="@string/close_tabs_on_exit_title"
         android:summary="@string/close_tabs_on_exit_summary"
         android:defaultValue="false" />
-    <org.chromium.components.browser_ui.settings.ChromeSwitchPreference
-        android:key="enable_referrers"
-        android:title="@string/enable_referrers_title"
-        android:defaultValue="false" />
     <Preference
         android:fragment="org.chromium.chrome.browser.privacy.settings.DoNotTrackSettings"
         android:key="do_not_track"
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
@@ -61,7 +61,6 @@ public class PrivacySettings
     private static final String PREF_HTTPS_FIRST_MODE = "https_first_mode";
     private static final String PREF_SECURE_DNS = "secure_dns";
     private static final String PREF_DO_NOT_TRACK = "do_not_track";
-    private static final String PREF_ENABLE_REFERRERS = "enable_referrers";
     private static final String PREF_CLEAR_BROWSING_DATA = "clear_browsing_data";
     private static final String PREF_PRIVACY_GUIDE = "privacy_guide";
     private static final String PREF_INCOGNITO_LOCK = "incognito_lock";
@@ -175,9 +174,6 @@ public class PrivacySettings
         } else if (PREF_CAN_MAKE_PAYMENT.equals(key)) {
             UserPrefs.get(Profile.getLastUsedRegularProfile())
                     .setBoolean(Pref.CAN_MAKE_PAYMENT_ENABLED, (boolean) newValue);
-        } else if (PREF_ENABLE_REFERRERS.equals(key)) {
-            UserPrefs.get(Profile.getLastUsedRegularProfile())
-                    .setBoolean(Pref.ENABLE_REFERRERS, (boolean) newValue);
         } else if (PREF_HTTPS_FIRST_MODE.equals(key)) {
             UserPrefs.get(Profile.getLastUsedRegularProfile())
                     .setBoolean(Pref.HTTPS_ONLY_MODE_ENABLED, (boolean) newValue);
@@ -231,10 +227,6 @@ public class PrivacySettings
                             : R.string.text_off);
         }

-        ChromeSwitchPreference enableReferrerPref = findPreference(PREF_ENABLE_REFERRERS);
-        enableReferrerPref.setChecked(prefService.getBoolean(Pref.ENABLE_REFERRERS));
-        enableReferrerPref.setOnPreferenceChangeListener(this);
-
         Preference preloadPagesPreference = findPreference(PREF_PRELOAD_PAGES);
         if (preloadPagesPreference != null) {
             preloadPagesPreference.setSummary(
diff --git a/content/browser/renderer_host/navigation_request.cc b/content/browser/renderer_host/navigation_request.cc
--- a/content/browser/renderer_host/navigation_request.cc
+++ b/content/browser/renderer_host/navigation_request.cc
@@ -431,13 +431,6 @@ void AddAdditionalRequestHeaders(
         blink::mojom::Referrer(GURL(), network::mojom::ReferrerPolicy::kNever);
   }

-  if (!url::IsSameOriginWith(referrer->url.GetAsReferrer(), url) &&
-      frame_tree_node->IsOutermostMainFrame()) {
-    // remove referrer if the navigation is done on the top frame
-    *referrer =
-        blink::mojom::Referrer(GURL(), network::mojom::ReferrerPolicy::kNever);
-  }
-
   // Next, set the HTTP Origin if needed.
   if (NeedsHTTPOrigin(headers, method)) {
     url::Origin origin_header_value = initiator_origin.value_or(url::Origin());
diff --git a/services/network/public/cpp/resource_request.h b/services/network/public/cpp/resource_request.h
--- a/services/network/public/cpp/resource_request.h
+++ b/services/network/public/cpp/resource_request.h
@@ -130,7 +130,7 @@ struct COMPONENT_EXPORT(NETWORK_CPP_BASE) ResourceRequest {
   std::vector<GURL> navigation_redirect_chain;

   GURL referrer;
-  net::ReferrerPolicy referrer_policy = net::ReferrerPolicy::REDUCE_GRANULARITY_ON_TRANSITION_CROSS_ORIGIN;
+  net::ReferrerPolicy referrer_policy = net::ReferrerPolicy::NEVER_CLEAR;
   net::HttpRequestHeaders headers;
   net::HttpRequestHeaders cors_exempt_headers;
   int load_flags = 0;
--
2.25.1
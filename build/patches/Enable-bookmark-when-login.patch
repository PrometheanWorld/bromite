From: wuyifeng <wuyifeng@nd.com.cn>
Date: Thu, 15 Dec 2022 11:41:05 +0800
Subject: Enable bookmark when login

Fix version: 1.2.1
Enable the bookmark functionality when the user signs in to Promethean.
Relate AP9-11097 and AP9-11086.

---
 base/BUILD.gn                                 |  2 ++
 .../org/chromium/base/PrometheanManager.java  | 33 +++++++++++++++++++
 .../chrome/browser/KeyboardShortcuts.java     | 27 +++++++++++++++
 .../AppMenuPropertiesDelegateImpl.java        | 20 +++--------
 .../base/SplitMonochromeApplication.java      |  3 +-
 .../browser/omnibox/LocationBarTablet.java    | 10 ++++--
 6 files changed, 76 insertions(+), 19 deletions(-)
 create mode 100755 base/android/java/src/org/chromium/base/PrometheanManager.java

diff --git a/base/BUILD.gn b/base/BUILD.gn
--- a/base/BUILD.gn
+++ b/base/BUILD.gn
@@ -4084,6 +4084,7 @@ if (is_android) {
     ]

     deps = [
+      "//third_party/android_deps:com_prometheanworld_identity_api_java",
       "//third_party/android_deps:com_google_code_findbugs_jsr305_java",
       "//third_party/androidx:androidx_annotation_annotation_experimental_java",
       "//third_party/androidx:androidx_annotation_annotation_java",
@@ -4144,6 +4145,7 @@ if (is_android) {
       "android/java/src/org/chromium/base/PowerMonitor.java",
       "android/java/src/org/chromium/base/PowerMonitorForQ.java",
       "android/java/src/org/chromium/base/Predicate.java",
+      "android/java/src/org/chromium/base/PrometheanManager.java",
       "android/java/src/org/chromium/base/Promise.java",
       "android/java/src/org/chromium/base/RadioUtils.java",
       "android/java/src/org/chromium/base/StreamUtil.java",
diff --git a/base/android/java/src/org/chromium/base/PrometheanManager.java b/base/android/java/src/org/chromium/base/PrometheanManager.java
new file mode 100755
--- /dev/null
+++ b/base/android/java/src/org/chromium/base/PrometheanManager.java
@@ -0,0 +1,33 @@
+package org.chromium.base;
+
+import com.prometheanworld.identity.impl.PrometheanProfileImpl;
+import com.prometheanworld.identity.dto.response.LoginStatusResponse;
+import com.prometheanworld.identity.handler.response.LoginStatusHandler;
+
+import org.chromium.base.ContextUtils;
+
+public class PrometheanManager {
+
+	public static final PrometheanManager INSTANCE = new PrometheanManager();
+
+	private PrometheanProfileImpl mProfileImpl;
+
+	private boolean mIsLogin;
+
+	private PrometheanManager() {
+		mProfileImpl = new PrometheanProfileImpl(ContextUtils.getApplicationContext());
+	}
+
+	public void updateLoginStatus() {
+		mProfileImpl.getLoginStatus(new LoginStatusHandler() {
+            @Override
+            public void handle(LoginStatusResponse loginStatusResponse) {
+                mIsLogin = loginStatusResponse.isLoggedIn;
+            }
+        });
+	}
+
+	public boolean isLogin() {
+		return mIsLogin;
+	}
+}
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/KeyboardShortcuts.java b/chrome/android/java/src/org/chromium/chrome/browser/KeyboardShortcuts.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/KeyboardShortcuts.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/KeyboardShortcuts.java
@@ -12,6 +12,7 @@ import android.view.KeyboardShortcutInfo;

 import androidx.annotation.RequiresApi;

+import org.chromium.base.PrometheanManager;
 import org.chromium.chrome.R;
 import org.chromium.chrome.browser.fullscreen.FullscreenManager;
 import org.chromium.chrome.browser.tab.Tab;
@@ -123,6 +124,7 @@ public class KeyboardShortcuts {
      */
     @RequiresApi(Build.VERSION_CODES.N)
     public static List<KeyboardShortcutGroup> createShortcutGroup(Context context) {
+        final boolean isLogin = PrometheanManager.INSTANCE.isLogin();
         final int ctrlShift = KeyEvent.META_CTRL_ON | KeyEvent.META_SHIFT_ON;

         List<KeyboardShortcutGroup> shortcutGroups = new ArrayList<>();
@@ -155,6 +157,10 @@ public class KeyboardShortcuts {
                 KeyEvent.KEYCODE_L, KeyEvent.META_CTRL_ON);
         addShortcut(context, chromeFeatureShortcutGroup, R.string.keyboard_shortcut_address_bar,
                 KeyEvent.KEYCODE_D, KeyEvent.META_ALT_ON);
+        if (isLogin) {
+            addShortcut(context, chromeFeatureShortcutGroup,
+                R.string.keyboard_shortcut_bookmark_manager, KeyEvent.KEYCODE_B, ctrlShift);
+        }
         shortcutGroups.add(chromeFeatureShortcutGroup);

         KeyboardShortcutGroup webpageShortcutGroup = new KeyboardShortcutGroup(
@@ -173,6 +179,10 @@ public class KeyboardShortcuts {
                 KeyEvent.KEYCODE_0, KeyEvent.META_CTRL_ON);
         addShortcut(context, webpageShortcutGroup, R.string.keyboard_shortcut_help_center,
                 KeyEvent.KEYCODE_SLASH, ctrlShift);
+        if (isLogin) {
+            addShortcut(context, webpageShortcutGroup, R.string.keyboard_shortcut_bookmark_page,
+                KeyEvent.KEYCODE_D, KeyEvent.META_CTRL_ON);
+        }
         shortcutGroups.add(webpageShortcutGroup);

         return shortcutGroups;
@@ -268,6 +278,8 @@ public class KeyboardShortcuts {
                 }
             }

+            final boolean isLogin = PrometheanManager.INSTANCE.isLogin();
+
             switch (keyCodeAndMeta) {
                 case CTRL | KeyEvent.KEYCODE_TAB:
                 case CTRL | KeyEvent.KEYCODE_PAGE_DOWN:
@@ -352,6 +364,21 @@ public class KeyboardShortcuts {
                 case KeyEvent.KEYCODE_BUTTON_START:
                     if (currentTab != null && currentTab.canGoForward()) currentTab.goForward();
                     return true;
+                case CTRL | SHIFT | KeyEvent.KEYCODE_B:
+                    if (!isLogin) {
+                        return false;
+                    }
+                    menuOrKeyboardActionController.onMenuOrKeyboardAction(
+                        R.id.all_bookmarks_menu_id, false);
+                    return true;
+                case KeyEvent.KEYCODE_BOOKMARK:
+                case CTRL | KeyEvent.KEYCODE_D:
+                    if (!isLogin) {
+                        return false;
+                    }
+                    menuOrKeyboardActionController.onMenuOrKeyboardAction(
+                        R.id.bookmark_this_page_id, false);
+                    return true;
             }
         }

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/app/appmenu/AppMenuPropertiesDelegateImpl.java b/chrome/android/java/src/org/chromium/chrome/browser/app/appmenu/AppMenuPropertiesDelegateImpl.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/app/appmenu/AppMenuPropertiesDelegateImpl.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/app/appmenu/AppMenuPropertiesDelegateImpl.java
@@ -35,6 +35,7 @@ import org.chromium.base.supplier.OneshotSupplier;
 import org.chromium.chrome.R;
 import org.chromium.chrome.browser.ActivityTabProvider;
 import org.chromium.chrome.browser.AlwaysIncognitoLinkInterceptor;
+import org.chromium.base.PrometheanManager;
 import org.chromium.chrome.browser.banners.AppMenuVerbiage;
 import org.chromium.chrome.browser.bookmarks.BookmarkBridge;
 import org.chromium.chrome.browser.bookmarks.BookmarkFeatures;
@@ -100,9 +101,6 @@ import java.util.Map;
 import org.chromium.components.prefs.PrefService;
 import org.chromium.components.user_prefs.UserPrefs;
 import org.chromium.chrome.browser.preferences.Pref;
-import com.prometheanworld.identity.impl.PrometheanProfileImpl;
-import com.prometheanworld.identity.dto.response.LoginStatusResponse;
-import com.prometheanworld.identity.handler.response.LoginStatusHandler;

 /**
  * Base implementation of {@link AppMenuPropertiesDelegate} that handles hiding and showing menu
@@ -128,8 +126,6 @@ public class AppMenuPropertiesDelegateImpl implements AppMenuPropertiesDelegate
     private int mAddAppTitleShown;
     private Map<CustomViewBinder, Integer> mCustomViewTypeOffsetMap;
     private boolean mIsTypeSpecificBookmarkItemRowPresent;
-    private PrometheanProfileImpl profileImpl;
-    private boolean hasUserLogin = false;

     @VisibleForTesting
     @IntDef({MenuGroup.INVALID, MenuGroup.PAGE_MENU, MenuGroup.OVERVIEW_MODE_MENU,
@@ -195,13 +191,6 @@ public class AppMenuPropertiesDelegateImpl implements AppMenuPropertiesDelegate
         mTabModelSelector = tabModelSelector;
         mToolbarManager = toolbarManager;
         mDecorView = decorView;
-        profileImpl = new PrometheanProfileImpl(mContext);
-        profileImpl.getLoginStatus(new LoginStatusHandler() {
-            @Override
-            public void handle(LoginStatusResponse loginStatusResponse) {
-                hasUserLogin = loginStatusResponse.isLoggedIn;
-            }
-        });

         if (overviewModeBehaviorSupplier != null) {
             overviewModeBehaviorSupplier.onAvailable(mCallbackController.makeCancelable(
@@ -531,11 +520,12 @@ public class AppMenuPropertiesDelegateImpl implements AppMenuPropertiesDelegate
         menu.findItem(R.id.enter_vr_id).setVisible(isCurrentTabNotNull && shouldShowEnterVr());

         // AP9-5181 Hide Bookmark functionality and Settings
-        menu.findItem(R.id.all_bookmarks_menu_id).setVisible(false);
-        menu.findItem(R.id.bookmark_all_tabs_menu_id).setVisible(false);
+        final boolean isLogin = PrometheanManager.INSTANCE.isLogin();
+        menu.findItem(R.id.all_bookmarks_menu_id).setVisible(isLogin);
+        menu.findItem(R.id.bookmark_all_tabs_menu_id).setVisible(isLogin);
         menu.findItem(R.id.view_source_id).setVisible(false);
         menu.findItem(R.id.exit_id).setVisible(false);
-        menu.findItem(R.id.preferences_id).setVisible(hasUserLogin);
+        menu.findItem(R.id.preferences_id).setVisible(isLogin);

         updateManagedByMenuItem(menu, currentTab);
     }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java b/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/base/SplitMonochromeApplication.java
@@ -11,6 +11,7 @@ import android.os.Process;
 import com.prometheanworld.telemetry.TelemetryInitializer;

 import org.chromium.android_webview.nonembedded.WebViewApkApplication;
+import org.chromium.base.PrometheanManager;
 import org.chromium.base.annotations.IdentifierNameString;
 import org.chromium.base.library_loader.LibraryProcessType;
 import org.chromium.components.version_info.VersionInfo;
@@ -52,6 +53,7 @@ public class SplitMonochromeApplication extends SplitChromeApplication {
        if (isMainProcess(this)) {
            new TelemetryInitializer().create(this);
        }
+       PrometheanManager.INSTANCE.updateLoginStatus();
     }

     @Override
@@ -89,7 +91,6 @@ public class SplitMonochromeApplication extends SplitChromeApplication {
                }
             }
        } catch (Throwable e) {
-            e.printStackTrace();
        }
        return isMain;
     }
diff --git a/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarTablet.java b/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarTablet.java
--- a/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarTablet.java
+++ b/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarTablet.java
@@ -11,6 +11,7 @@ import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;

+import org.chromium.base.PrometheanManager;
 import org.chromium.ui.base.LocalizationUtils;

 /**
@@ -49,12 +50,13 @@ class LocationBarTablet extends LocationBarLayout {
     @Override
     protected void onFinishInflate() {
         super.onFinishInflate();
+        final boolean isLogin = PrometheanManager.INSTANCE.isLogin();

         mLocationBarIcon = findViewById(R.id.location_bar_status_icon);
         mBookmarkButton = findViewById(R.id.bookmark_button);
         mSaveOfflineButton = findViewById(R.id.save_offline_button);

-        mBookmarkButton.setVisibility(View.GONE);
+        mBookmarkButton.setVisibility(isLogin? View.VISIBLE : View.GONE);
         mTargets = new View[] {mUrlBar, mDeleteButton};
     }

@@ -216,8 +218,10 @@ class LocationBarTablet extends LocationBarLayout {

     @Deprecated
     /* package */ void setBookmarkButtonVisibility(boolean showBookmarkButton) {
-        // From AP9-5181, we will hide the bookmark button.
-        // so this method won't do anything.
+        final boolean isLogin = PrometheanManager.INSTANCE.isLogin();
+        if (isLogin) {
+            mBookmarkButton.setVisibility(showBookmarkButton ? View.VISIBLE : View.GONE);
+        }
     }

     /* package */ void setSaveOfflineButtonVisibility(
--
2.34.1
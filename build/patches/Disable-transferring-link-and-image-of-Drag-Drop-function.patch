From: wuyifeng <wuyifeng@nd.com.cn>
Date: Thu, 19 Jan 2023 09:43:54 +0800
Subject: Disable transferring link and image of Drag and Drop function

Fix version: 1.4.0
For the Chromium that the version is 100+ and OS is Android, the Drag and Drop function can transfer
text, link and image, but we can just get one of them, and the priority is that image > link > text,
so if we set the text, link and image data, we can just get the image data, and we can't get the text
and image data, but on 99-, the Drag and Drop function only supports transferring text, so the web
developers will be confused for that.
In order to be compatible with the old code, we will disable transferring link and image.
Relate to https://prometheanworld.atlassian.net/browse/AP9-11548.
Relate to https://prometheanworld.atlassian.net/wiki/spaces/AP9/pages/14429487423/SPIKE+-+Drag+and+Drop+function+in+Chromium+Browser+does+not+work.
Relate to Revert-Enable-SPPI-for-devices-with-enough-memory.patch, Revert-Enable-StrictOriginIsolation-and-SitePerProcess.patch.

---
 content/browser/android/drop_data_android.cc      | 22 ----------
 1 file changed, 0 insertion(+), 22 deletions(-)

diff --git a/content/browser/android/drop_data_android.cc b/content/browser/android/drop_data_android.cc
--- a/content/browser/android/drop_data_android.cc
+++ b/content/browser/android/drop_data_android.cc
@@ -35,10 +35,6 @@ ScopedJavaLocalRef<jobject> ToJavaDropData(const DropData& drop_data) {
   }

   ScopedJavaLocalRef<jobject> jgurl;
-  if (!drop_data.url.is_empty()) {
-    jgurl = url::GURLAndroid::FromNativeGURL(env, drop_data.url);
-    jtext = ConvertUTF16ToJavaString(env, drop_data.url_title);
-  }

   // If file_contents is not empty, user is trying to drag image out of the
   // web contents. If the image contains a link, the link URL, represented by
@@ -50,24 +46,6 @@ ScopedJavaLocalRef<jobject> ToJavaDropData(const DropData& drop_data) {
   ScopedJavaLocalRef<jbyteArray> jimage_bytes;
   ScopedJavaLocalRef<jstring> jimage_extension;
   ScopedJavaLocalRef<jstring> jimage_filename;
-  if (!drop_data.file_contents.empty()) {
-    jimage_bytes = ToJavaByteArray(env, drop_data.file_contents);
-    jimage_extension = ConvertUTF8ToJavaString(
-        env, drop_data.file_contents_filename_extension);
-    absl::optional<base::FilePath> filename =
-        drop_data.GetSafeFilenameForImageFileContents();
-    if (filename) {
-      jimage_filename =
-          ConvertUTF16ToJavaString(env, filename->LossyDisplayName());
-    } else {
-      // Use the current timestamp as the image file name in case the file name
-      // is not retrieved from the source.
-      jimage_filename = ConvertUTF8ToJavaString(
-          env, base::NumberToString(
-                   base::Time::Now().since_origin().InMilliseconds()) +
-                   "." + drop_data.file_contents_filename_extension);
-    }
-  }

   return ui::Java_DropDataAndroid_create(env, jtext, jgurl, jimage_bytes,
                                          jimage_extension, jimage_filename);
--
2.34.1